import logging
import traceback
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes, ConversationHandler
from config import MENU, ORDER_STATUS, ADMIN_GROUP_ID
from utils.helpers import get_main_menu_keyboard
from utils.database import get_order, update_order_status

logger = logging.getLogger(__name__)


async def order_status_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """Handle order status check."""
    query = update.callback_query
    await query.answer()

    logger.info(f"–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞: {query.data}")

    if query.data.startswith('check_status_'):
        order_id = query.data.split('_')[2]

        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–µ
        order_data = get_order(order_id)

        if not order_data:
            await query.edit_message_text(
                "–ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ —É—Å—Ç–∞—Ä–µ–ª.",
                reply_markup=InlineKeyboardMarkup([
                    [InlineKeyboardButton("üìã –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data='menu')]
                ])
            )
            return MENU

        status = order_data.get('status', 'pending')
        status_text = {
            'pending': "–û–∂–∏–¥–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è",
            'approved': "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω, –æ–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã",
            'paid': "–û–ø–ª–∞—á–µ–Ω, –≥–æ—Ç–æ–≤–∏—Ç—Å—è",
            'preparing': "–ì–æ—Ç–æ–≤–∏—Ç—Å—è",
            'delivering': "–í –¥–æ—Å—Ç–∞–≤–∫–µ",
            'completed': "–î–æ—Å—Ç–∞–≤–ª–µ–Ω",
            'rejected': "–û—Ç–∫–ª–æ–Ω–µ–Ω",
            'cancelled': "–û—Ç–º–µ–Ω–µ–Ω"
        }.get(status, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å")

        # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞
        keyboard = []

        if status in ['pending', 'approved']:
            keyboard.append([InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑", callback_data=f'cancel_order_{order_id}')])

        keyboard.append([InlineKeyboardButton("üìã –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data='menu')])

        await query.edit_message_text(
            f"–°—Ç–∞—Ç—É—Å –≤–∞—à–µ–≥–æ –∑–∞–∫–∞–∑–∞: {status_text}\n"
            f"ID –∑–∞–∫–∞–∑–∞: {order_id}",
            reply_markup=InlineKeyboardMarkup(keyboard)
        )

        return ORDER_STATUS

    return MENU


async def cancel_order_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """Handle order cancellation."""
    query = update.callback_query
    await query.answer()

    logger.info(f"–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–º–µ–Ω—ã –∑–∞–∫–∞–∑–∞: {query.data}")

    if query.data.startswith('cancel_order_'):
        order_id = query.data.split('_')[2]

        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–µ
        order_data = get_order(order_id)

        if not order_data:
            await query.edit_message_text(
                "–ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ —É—Å—Ç–∞—Ä–µ–ª.",
                reply_markup=InlineKeyboardMarkup([
                    [InlineKeyboardButton("üìã –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data='menu')]
                ])
            )
            return MENU

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç —ç—Ç–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        if order_data.get('user_id') != update.effective_user.id:
            await query.answer("–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å —ç—Ç–æ—Ç –∑–∞–∫–∞–∑", show_alert=True)
            return ORDER_STATUS

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–∫–∞–∑ –≤ —Å—Ç–∞—Ç—É—Å–µ, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–Ω–æ –æ—Ç–º–µ–Ω–∏—Ç—å
        if order_data.get('status') not in ['pending', 'approved']:
            await query.answer("–≠—Ç–æ—Ç –∑–∞–∫–∞–∑ —É–∂–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å", show_alert=True)
            return ORDER_STATUS

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞
        order_data['status'] = 'cancelled'
        update_order_status(order_id, 'cancelled')

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await query.edit_message_text(
            "–í–∞—à –∑–∞–∫–∞–∑ –±—ã–ª –æ—Ç–º–µ–Ω–µ–Ω.",
            reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton("üìã –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data='menu')]
            ])
        )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
        try:
            # –ù–∞—Ö–æ–¥–∏–º ID —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø–µ –∞–¥–º–∏–Ω–æ–≤
            admin_message_info = next(
                (msg for msg in order_data.get('message_ids', []) if str(msg.get('chat_id')) == str(ADMIN_GROUP_ID)),
                None
            )

            if admin_message_info:
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø–µ –∞–¥–º–∏–Ω–æ–≤
                await context.bot.edit_message_text(
                    chat_id=admin_message_info['chat_id'],
                    message_id=admin_message_info['message_id'],
                    text=f"‚ö†Ô∏è –ó–ê–ö–ê–ó –û–¢–ú–ï–ù–ï–ù –ö–õ–ò–ï–ù–¢–û–ú ‚ö†Ô∏è\n\n"
                         f"ID –∑–∞–∫–∞–∑–∞: {order_id}\n"
                         f"–ö–ª–∏–µ–Ω—Ç: {order_data.get('full_name')}"
                         f"{' (@' + order_data.get('username') + ')' if order_data.get('username') else ''}",
                    reply_markup=None
                )
            else:
                # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ
                await context.bot.send_message(
                    chat_id=ADMIN_GROUP_ID,
                    text=f"‚ö†Ô∏è –ó–ê–ö–ê–ó –û–¢–ú–ï–ù–ï–ù –ö–õ–ò–ï–ù–¢–û–ú ‚ö†Ô∏è\n\n"
                         f"ID –∑–∞–∫–∞–∑–∞: {order_id}\n"
                         f"–ö–ª–∏–µ–Ω—Ç: {order_data.get('full_name')}"
                         f"{' (@' + order_data.get('username') + ')' if order_data.get('username') else ''}"
                )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ—Ç–º–µ–Ω–µ –∑–∞–∫–∞–∑–∞: {e}")
            logger.error(traceback.format_exc())

        return MENU

    return ORDER_STATUS